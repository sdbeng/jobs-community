// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int      @id @default(autoincrement())
  email       String   @unique
  clerkUserId String?  @unique
  name        String?
  imageUrl    String?
  // firstName   String
  // lastName    String
  // profile     Profile?
  // applications Application[]
  // likes       Like[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  posts       Post[]

  // @@map("users")
}

model Post {
  id        Int      @id @default(autoincrement())
  text      String
  // content   String
  //related to user
  authorId  String
  author    User     @relation(fields: [authorId], references: [clerkUserId], onDelete: Cascade)
  // likes     Like[]
  createdAt DateTime @default(now())

  // @@map("posts")

  @@index([authorId])
}

model Project {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  price       Float
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

// model Profile {
//   id        Int     @id @default(autoincrement())
//   bio       String?
//   userId    Int     @unique
//   user      User    @relation(fields: [userId], references: [id])
//   company   Company?
//   skills    String[]
//   location  String?

//   @@map("profiles")
// }
